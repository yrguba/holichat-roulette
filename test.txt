text content

server {
      listen 80 default_server;
      listen [::]:80 default_server;


      root /var/www/holichat-roulette/build;
      index index.html index.htm index.nginx-debian.html;
      server_name hoolichat.ru; # managed by Certbot

    location / {
        root /var/www/confee-backend/build;
        try_files $uri $uri/ /index.html;
    }

    location /storage {
        proxy_pass http://localhost:5000;
    }

    location /api {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy false;
        #proxy_redirect off;
        proxy_pass http://localhost:5000;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    location /swagger/v1 {
        proxy_pass http://localhost:5000;
    }
}

server {
    root /var/www/holichat-roulette/build;
    index index.html index.htm index.nginx-debian.html;
    server_name hoolichat.ru; # managed by Certbot


    location / {
        try_files $uri $uri/ =404;
     }


    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hoolichat.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hoolichat.ru/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = hoolichat.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 ;
    listen [::]:80 ;
    server_name hoolichat.ru;
    return 404; # managed by Certbot
}
